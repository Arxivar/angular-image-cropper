(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("angular"));
	else if(typeof define === 'function' && define.amd)
		define(["angular"], factory);
	else if(typeof exports === 'object')
		exports["imageCropper"] = factory(require("angular"));
	else
		root["imageCropper"] = factory(root["angular"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

eval("var angular = __webpack_require__(1);\r\n\r\nvar ngModule = angular.module('imageCropper', []);\r\n\r\nvar Cropper = __webpack_require__(2);\r\n__webpack_require__(3)(angular, Cropper);\r\n\r\nmodule.exports = 'imageCropper';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/OTU1MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYW5ndWxhciA9IHJlcXVpcmUoJ2FuZ3VsYXInKTtcclxuXHJcbnZhciBuZ01vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdpbWFnZUNyb3BwZXInLCBbXSk7XHJcblxyXG52YXIgQ3JvcHBlciA9IHJlcXVpcmUoJy4vaW1hZ2VDcm9wcGVyJyk7XHJcbnJlcXVpcmUoJy4vaW1hZ2VDcm9wcGVyRGlyZWN0aXZlJykoYW5ndWxhciwgQ3JvcHBlcik7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9ICdpbWFnZUNyb3BwZXInO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_1__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJhbmd1bGFyXCI/MTFkMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzFfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImFuZ3VsYXJcIlxuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

eval("module.exports = Cropper;\r\n\r\n/**\r\n * Cropper.\r\n * @param options\r\n * @returns {Cropper}\r\n * @constructor\r\n */\r\nfunction Cropper(options) {\r\n\r\n  if (!options.imageUrl) {\r\n    throw new Error('Cropper: No image url given.');\r\n  }\r\n\r\n  this.isReady = false;\r\n  this.originalUrl = options.imageUrl;\r\n\r\n  // Default options.\r\n  var defaults = {\r\n    checkCrossOrigin: false,\r\n    apiCallback: undefined,\r\n    cropCallback: undefined,\r\n    width: 400,\r\n    height: 300,\r\n    imageUrl: undefined,\r\n    target: undefined,\r\n    showControls: true,\r\n    fitOnInit: false,\r\n    centerOnInit: false,\r\n    zoomStep: 0.1,\r\n    actionLabels: {\r\n      rotateLeft: ' < ',\r\n      rotateRight: ' > ',\r\n      zoomIn: ' + ',\r\n      zoomOut: ' - ',\r\n      fit: '(fit)',\r\n      crop: '[crop]'\r\n    }\r\n  };\r\n\r\n  // Setup options.\r\n  this.options = this.extend(defaults, options);\r\n\r\n  // Setup gesture events.\r\n  this.gesture = {};\r\n  this.gesture.events = {\r\n    start: 'touchstart mousedown',\r\n    move: 'touchmove mousemove',\r\n    stop: 'touchend mouseup'\r\n  };\r\n\r\n  this.pointerPosition = undefined;\r\n\r\n  // Setup basic elements.\r\n  this.elements = {\r\n    target: options.target,\r\n    body: document.getElementsByTagName('body')[0]\r\n  };\r\n\r\n  this.buildDOM();\r\n  this.useHardwareAccelerate(this.elements.image);\r\n\r\n  // API Setup:\r\n  var api = {\r\n    crop: this.cropImage.bind(this),\r\n    fit: this.applyFit.bind(this),\r\n    rotate: this.applyRotation.bind(this),\r\n    zoomIn: this.applyZoomIn.bind(this),\r\n    zoomOut: this.applyZoomOut.bind(this),\r\n    remove: this.remove.bind(this)\r\n  };\r\n\r\n  /**\r\n   * Initialization of the Cropper (dimensions, event binding...).\r\n   */\r\n  this.events.on('ImageReady', this.initialize.bind(this));\r\n\r\n  /**\r\n   * Execute callback function when cropped.\r\n   */\r\n  if (this.options.cropCallback) {\r\n    this.events.on('Cropped', function(base64) {\r\n      this.options.cropCallback(base64);\r\n    }.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Send API when image is ready if readyCallback is true.\r\n   */\r\n  if (this.options.apiCallback) {\r\n    this.events.on('ImageReady', function() {\r\n      this.options.apiCallback(api);\r\n    }.bind(this));\r\n  }\r\n}\r\n\r\nCropper.prototype.initialize = function() {\r\n  this.setDimensions();\r\n\r\n  if (this.imageHasToFit()) {\r\n    this.fitImage();\r\n    this.centerImage();\r\n  }\r\n  this.initializeGesture();\r\n\r\n  if (this.options.centerOnInit) {\r\n    this.centerImage();\r\n  }\r\n\r\n  if (this.options.showControls) {\r\n    this.bindControls();\r\n  }\r\n};\r\n\r\nCropper.prototype.bindControls = function() {\r\n  var self = this;\r\n  this.elements.controls.rotateLeft.addEventListener('click', function() {\r\n    self.applyRotation(-90);\r\n  });\r\n  this.elements.controls.rotateRight.addEventListener('click', function() {\r\n    self.applyRotation(90);\r\n  });\r\n  this.elements.controls.zoomIn.addEventListener('click', function() {\r\n    self.applyZoomIn(self.zoomInFactor);\r\n  });\r\n  this.elements.controls.zoomOut.addEventListener('click', function() {\r\n    self.applyZoomOut(self.zoomOutFactor);\r\n  });\r\n  this.elements.controls.fit.addEventListener('click', this.applyFit.bind(this));\r\n  this.elements.controls.crop.addEventListener('click', this.cropImage.bind(this));\r\n};\r\n\r\nCropper.prototype.applyRotation = function(degree) {\r\n  this.rotateImage(degree);\r\n};\r\n\r\nCropper.prototype.applyZoomIn = function(zoom) {\r\n  this.zoomImage(1 + parseFloat(zoom));\r\n};\r\nCropper.prototype.applyZoomOut = function(zoom) {\r\n  this.zoomImage(1 / ( 1 + parseFloat(zoom)));\r\n};\r\n\r\nCropper.prototype.applyFit = function() {\r\n  this.fitImage();\r\n  this.centerImage();\r\n};\r\n\r\nCropper.prototype.imageHasToFit = function() {\r\n  return this.elements.image.naturalWidth < this.options.width ||\r\n    this.elements.image.naturalHeight < this.options.height ||\r\n    this.width < 1 || this.height < 1 || // 1 means 100%.\r\n    this.options.fitOnInit;\r\n};\r\n\r\n/**\r\n * Build DOM element for the Cropper appended in the targeted element.\r\n */\r\nCropper.prototype.buildDOM = function() {\r\n  var _elements;\r\n  _elements = this.elements;\r\n\r\n  // Wrapper.\r\n  _elements.wrapper = document.createElement('div');\r\n  _elements.wrapper.className = 'imgCropper-wrapper';\r\n\r\n  // Container.\r\n  _elements.container = document.createElement('div');\r\n  _elements.container.className = 'imgCropper-container';\r\n\r\n  // Image.\r\n  _elements.image = document.createElement('img');\r\n  _elements.image.className = 'imgCropper-image';\r\n\r\n\r\n  // Target -> Wrapper -> Container -> Image\r\n  _elements.container.appendChild(_elements.image);\r\n  _elements.wrapper.appendChild(_elements.container);\r\n  _elements.target.appendChild(_elements.wrapper);\r\n\r\n  if (!this.options.showControls) {\r\n    return this.loadImage();\r\n  }\r\n\r\n  // Controls.\r\n  _elements.controls = {};\r\n  _elements.controls.wrapper = document.createElement('div');\r\n  _elements.controls.wrapper.className = 'imgCropper-controls';\r\n\r\n  _elements.controls.rotateLeft = this._buildControl(this.options.actionLabels.rotateLeft);\r\n  _elements.controls.rotateRight = this._buildControl(this.options.actionLabels.rotateRight);\r\n  _elements.controls.zoomIn = this._buildControl(this.options.actionLabels.zoomIn);\r\n  _elements.controls.zoomOut = this._buildControl(this.options.actionLabels.zoomOut);\r\n  _elements.controls.fit = this._buildControl(this.options.actionLabels.fit);\r\n\r\n  _elements.controls.crop = this._buildControl(this.options.actionLabels.crop);\r\n\r\n\t// Target -> Wrapper -> buttons\r\n\t//d.parisi non passando la relativa label è ora possibile nascondere un bottone\r\n\tif(this.options.actionLabels.rotateLeft){\r\n\t\t_elements.controls.wrapper.appendChild(_elements.controls.rotateLeft);\r\n\t}\r\n\tif(this.options.actionLabels.zoomOut){\r\n\t\t_elements.controls.wrapper.appendChild(_elements.controls.zoomOut);\r\n\t}\r\n\tif(this.options.actionLabels.fit){\r\n\t\t_elements.controls.wrapper.appendChild(_elements.controls.fit);\r\n\t}\r\n\tif(this.options.actionLabels.crop){\r\n\t\t_elements.controls.wrapper.appendChild(_elements.controls.crop);\r\n\t}\r\n\tif(this.options.actionLabels.zoomIn){\r\n\t\t_elements.controls.wrapper.appendChild(_elements.controls.zoomIn);\r\n\t}\r\n\tif(this.options.actionLabels.rotateRight){\r\n\t\t_elements.controls.wrapper.appendChild(_elements.controls.rotateRight);\r\n\t}\r\n\r\n\t_elements.target.appendChild(_elements.controls.wrapper);\r\n  this.loadImage();\r\n};\r\n\r\n/**\r\n * Build control element.\r\n * @param label\r\n * @returns {Element}\r\n */\r\nCropper.prototype._buildControl = function(label) {\r\n  var control = document.createElement('button');\r\n  control.setAttribute('type', 'button');\r\n  control.innerHTML = label;\r\n\r\n  return control;\r\n};\r\n\r\n/**\r\n * Remove all DOM element parts of the Cropper.\r\n */\r\nCropper.prototype.remove = function() {\r\n  var elements = this.elements;\r\n  elements.target.removeChild(elements.wrapper);\r\n  if (this.options.showControls) elements.target.removeChild(elements.controls.wrapper);\r\n};\r\n\r\nCropper.prototype.changeImage = function(newImageUrl) {\r\n  if (typeof newImageUrl === 'undefined' || newImageUrl === '') {\r\n    return;\r\n  }\r\n\r\n  this.originalUrl = newImageUrl;\r\n  this.loadImage();\r\n};\r\n\r\nCropper.prototype.loadImage = function() {\r\n  var self = this;\r\n  var xhr;\r\n\r\n  // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari.\r\n  if (/^data\\:/.test(this.originalUrl)) {\r\n    this.originalBase64 = this.originalUrl;\r\n    return this.setupImageSRC();\r\n  }\r\n\r\n  xhr = new XMLHttpRequest();\r\n  xhr.onerror = xhr.onabort = function(response) {\r\n    self.originalBase64 = self.originalUrl;\r\n    self.setupImageSRC();\r\n  };\r\n\r\n  // Need to have proper sets of 'Access-Control-Allow-Origin' on the requested resource server.\r\n  xhr.onload = function() {\r\n    self.originalArrayBuffer = this.response;\r\n    self.originalBase64 = 'data:image/jpeg;base64,' + self.base64ArrayBuffer(this.response);\r\n    self.setupImageSRC();\r\n  };\r\n  xhr.open('get', this.originalUrl, true);\r\n  //xhr.setRequestHeader('Content-Type', 'image/jpg'); // TODO: Auto determine the image MIME's type.\r\n  xhr.responseType = 'arraybuffer';\r\n  xhr.send();\r\n};\r\n\r\n/**\r\n * Check crossOrigins and setup image src.\r\n */\r\nCropper.prototype.setupImageSRC = function() {\r\n  var _image = this.elements.image;\r\n\r\n  if (this.options.checkCrossOrigin && this.isCrossOrigin(this.originalUrl)) {\r\n    this.crossOrigin = _image.crossOrigin;\r\n\r\n    if (this.crossOrigin) {\r\n      this.crossOrigin = this.originalUrl;\r\n    } else {\r\n      this.crossOrigin = 'anonymous';\r\n\r\n      // Bust cache with a timestamp.\r\n      this.crossOriginUrl = this.addTimestamp(this.originalUrl);\r\n    }\r\n  }\r\n\r\n  if (this.crossOrigin) {\r\n    this.elements.image.crossOrigin = this.crossOrigin;\r\n  }\r\n\r\n  // Setup image src.\r\n  this.elements.image.src = this.crossOriginUrl || this.originalUrl; // Need to verify.\r\n  //this.elements.image.src = this.originalBase64; // Need to verify.\r\n\r\n  // Waiting the image as loaded to trigger event.\r\n  this.elements.image.onload = function() {\r\n    this.events.triggerHandler('ImageReady');\r\n  }.bind(this);\r\n};\r\n\r\n/**\r\n * Set dimensions.\r\n */\r\nCropper.prototype.setDimensions = function() {\r\n  this.zoomInFactor = 1 + parseFloat(this.options.zoomStep);\r\n  this.zoomOutFactor = 1 / this.zoomInFactor;\r\n\r\n  this.imageRatio = this.options.height / this.options.width;\r\n  this.width = this.elements.image.naturalWidth / this.options.width;\r\n  this.height = this.elements.image.naturalHeight / this.options.height;\r\n  this.left = 0;\r\n  this.top = 0;\r\n  this.angle = 0;\r\n  this.data = {\r\n    scale: 1,\r\n    degrees: 0,\r\n    x: 0,\r\n    y: 0,\r\n    w: this.options.width,\r\n    h: this.options.height\r\n  };\r\n\r\n  // Container.\r\n  this.elements.container.style.width = this.width * 100 + '%';\r\n  this.elements.container.style.height = this.height * 100 + '%';\r\n  this.elements.container.style.top = 0;\r\n  this.elements.container.style.left = 0;\r\n\r\n  // Wrapper.\r\n  this.elements.wrapper.style.height = 'auto';\r\n  this.elements.wrapper.style.width = '100%';\r\n  this.elements.wrapper.style.paddingTop = (this.imageRatio * 100) + '%';\r\n\r\n  this.isReady = true;\r\n};\r\n\r\n/**\r\n * Image should be already loaded.\r\n */\r\nCropper.prototype.initializeGesture = function() {\r\n  var self = this;\r\n  this.addEventListeners(this.elements.image, this.gesture.events.start, function(event) {\r\n    if (self.isReady && self.isValidEvent(event)) {\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation();\r\n      self.pointerPosition = self.getPointerPosition(event);\r\n      bind();\r\n    }\r\n  });\r\n\r\n  var bind = function() {\r\n    self.elements.body.classList.add('imgCropper-dragging');\r\n    self.addEventListeners(self.elements.body, self.gesture.events.move, drag);\r\n    self.addEventListeners(self.elements.body, self.gesture.events.stop, unbind);\r\n  };\r\n\r\n  var unbind = function() {\r\n    self.elements.body.classList.remove('imgCropper-dragging');\r\n    self.removeEventListeners(self.elements.body, self.gesture.events.move, drag);\r\n    self.removeEventListeners(self.elements.body, self.gesture.events.stop, unbind);\r\n  };\r\n\r\n  var drag = function(event) {\r\n    self.dragging.call(self, event);\r\n  };\r\n};\r\n\r\n/**\r\n * Dragging action.\r\n * @param event\r\n */\r\nCropper.prototype.dragging = function(event) {\r\n  var dx, dy, left, p, top;\r\n  event.preventDefault();\r\n  event.stopImmediatePropagation();\r\n\r\n  p = this.getPointerPosition(event); // Cursor position after moving.\r\n\r\n  dx = p.x - this.pointerPosition.x; // Difference (cursor movement) on X axes.\r\n  dy = p.y - this.pointerPosition.y; // Difference (cursor movement) on Y axes.\r\n\r\n  this.pointerPosition = p; // Update cursor position.\r\n\r\n  /**\r\n   * dx > 0 if moving right.\r\n   * dx / clientWidth is the percentage of the wrapper's width it moved over X.\r\n   */\r\n  left = (dx === 0)? null : this.left - dx / this.elements.wrapper.clientWidth;\r\n\r\n  /**\r\n   * dy > 0 if moving down.\r\n   * dy / clientHeight is the percentage of the wrapper's width it moved over Y.\r\n   */\r\n  top = (dy === 0)? null : this.top - dy / this.elements.wrapper.clientHeight;\r\n\r\n  // Move.\r\n  this.setOffset(left, top);\r\n};\r\n\r\n/**\r\n * Set image offset manipulations.\r\n * @param left {number} is a relative number.\r\n * @param top {number} is a relative number.\r\n */\r\nCropper.prototype.setOffset = function(left, top) {\r\n  /**\r\n   * Offset left.\r\n   */\r\n  if (left || left === 0) {\r\n    if (left < 0) { left = 0; }\r\n    if (left > this.width - 1) { left = this.width - 1; }\r\n\r\n    this.elements.container.style.left = (-left * 100).toFixed(2) + '%';\r\n    this.left = left;\r\n    this.data.x = Math.round(left * this.options.width);\r\n  }\r\n\r\n  /**\r\n   * Offset top.\r\n   */\r\n  if (top || top === 0) {\r\n    if (top < 0) { top = 0; }\r\n    if (top > this.height - 1) { top = this.height - 1; }\r\n\r\n    this.elements.container.style.top = (-top * 100).toFixed(2) + '%';\r\n    this.top = top;\r\n    this.data.y = Math.round(top * this.options.height);\r\n  }\r\n};\r\n\r\nCropper.prototype.fitImage = function() {\r\n  var prevWidth, relativeRatio;\r\n\r\n  prevWidth = this.width;\r\n  relativeRatio = this.height / this.width;\r\n\r\n  if (relativeRatio > 1) {\r\n    this.width = 1;\r\n    this.height = relativeRatio;\r\n  } else {\r\n    this.width = 1 / relativeRatio;\r\n    this.height = 1;\r\n  }\r\n\r\n  this.elements.container.style.width = (this.width * 100).toFixed(2) + '%';\r\n  this.elements.container.style.height = (this.height * 100).toFixed(2) + '%';\r\n\r\n  this.data.scale *= this.width / prevWidth;\r\n};\r\n\r\nCropper.prototype.centerImage = function() {\r\n  this.setOffset((this.width - 1) / 2, (this.height - 1) / 2);\r\n};\r\n\r\n/**\r\n * Do a rotation on the image with degrees given.\r\n * @param degrees\r\n */\r\nCropper.prototype.rotateImage = function(degrees) {\r\n  // Only rotate of 90°.\r\n  if (!(degrees !== 0 && degrees % 90 === 0)) {\r\n    throw new Error('Cropper: Support only multiple of 90° for rotation.');\r\n  }\r\n\r\n  // Smallest positive equivalent angle (total rotation).\r\n  this.angle = (this.angle + degrees) % 360;\r\n  if (this.angle < 0) {\r\n    this.angle += 360;\r\n  }\r\n\r\n  // Dimensions are changed?\r\n  if (degrees % 180 !== 0) {\r\n    /**\r\n     * Switch canvas dimensions (as percentages).\r\n     * canvasWidth = @width * this.options.width; canvasHeight = @height * this.options.height\r\n     * To make canvasWidth = canvasHeight (to switch dimensions):\r\n     * => newWidth * this.options.width = @height * this.options.height\r\n     * => newWidth = @height * this.options.height / this.options.width\r\n     * => newWidth = @height * this.imageRatio\r\n     */\r\n    var tempW = this.height * this.imageRatio;\r\n    var tempH = this.width / this.imageRatio;\r\n    this.width = tempW;\r\n    this.height = tempH;\r\n    if (this.width >= 1 && this.height >= 1) {\r\n      this.elements.container.style.width = this.width * 100 + '%';\r\n      this.elements.container.style.height = this.height * 100 + '%';\r\n    } else {\r\n      this.fitImage();\r\n    }\r\n  }\r\n\r\n  var newWidth = 1;\r\n  var newHeight = 1;\r\n\r\n  // Adjust element's (image) dimensions inside the container.\r\n  if (this.angle % 180 !== 0) {\r\n    var ratio = this.height / this.width * this.imageRatio;\r\n    newWidth = ratio;\r\n    newHeight = 1 / ratio;\r\n  }\r\n\r\n  this.elements.image.style.width = newWidth * 100 + '%';\r\n  this.elements.image.style.height = newHeight * 100 + '%';\r\n  this.elements.image.style.left = (1 - newWidth) / 2 * 100 + '%';\r\n  this.elements.image.style.top = (1 - newHeight) / 2 * 100 + '%';\r\n\r\n\r\n  this.elements.image.style.transform = 'rotate(' + this.angle + 'deg)';\r\n  this.elements.image.style.webkitTransform = 'rotate(' + this.angle + 'deg)';\r\n  this.elements.image.style.mozTransform = 'rotate(' + this.angle + 'deg)';\r\n  this.elements.image.style.msTransform = 'rotate(' + this.angle + 'deg)';\r\n  this.elements.image.style.oTransform = 'rotate(' + this.angle + 'deg)';\r\n\r\n  this.centerImage();\r\n  this.data.degrees = this.angle;\r\n};\r\n\r\nCropper.prototype.zoomImage = function(factor) {\r\n  if (factor <= 0 || factor == 1) {\r\n    return;\r\n  }\r\n\r\n  var originalWidth = this.width;\r\n\r\n  if (this.width * factor > 1 && this.height * factor > 1) {\r\n    this.height *= factor;\r\n    this.width *= factor;\r\n    this.elements.container.style.height = (this.height * 100).toFixed(2) + '%';\r\n    this.elements.container.style.width = (this.width * 100).toFixed(2) + '%';\r\n    this.data.scale *= factor;\r\n  } else {\r\n    this.fitImage();\r\n    factor = this.width / originalWidth;\r\n  }\r\n\r\n  /**\r\n   * Keep window center.\r\n   * The offsets are the distances between the image point in the center of the wrapper\r\n   * and each edge of the image, less half the size of the window.\r\n   * Percentage offsets are relative to the container (the wrapper), so half the wrapper\r\n   * is 50% (0.5) and when zooming the distance between any two points in the image\r\n   * grows by 'factor', so the new offsets are:\r\n   *\r\n   * offset = (prev-center-to-edge) * factor - half-window\r\n   *\r\n   */\r\n  var left = (this.left + 0.5) * factor - 0.5;\r\n  var top = (this.top + 0.5) * factor - 0.5;\r\n\r\n  this.setOffset(left, top);\r\n};\r\n\r\nCropper.prototype.cropImage = function() {\r\n  return this.cropHandler();\r\n};\r\n\r\nCropper.prototype.cropHandler = function() {\r\n  var canvas, context;\r\n\r\n  canvas = document.createElement('canvas');\r\n  canvas.height = this.options.height;\r\n  canvas.width = this.options.width;\r\n\r\n  var cx = -canvas.width / 2;\r\n  var cy = -canvas.height / 2;\r\n\r\n  context = canvas.getContext('2d');\r\n  context.translate(-cx,-cy); //move to centre of canvas\r\n  context.rotate(this.data.degrees * Math.PI/180);\r\n  context.scale(this.data.scale, this.data.scale);\r\n\r\n  if(this.data.degrees == 0) { // simple offsets from canvas centre & scale\r\n    context.drawImage(this.elements.image,\r\n      (cx - this.data.x) / this.data.scale,\r\n      (cy - this.data.y) / this.data.scale\r\n    );\r\n  } else if(this.data.degrees == 90) { // swap axis and reverse the new y origin\r\n    context.drawImage(this.elements.image,\r\n      (cy - this.data.y) / this.data.scale,\r\n      (-1 * this.elements.image.naturalHeight) + ((-cx + this.data.x) / this.data.scale)\r\n    );\r\n  } else if(this.data.degrees == 180) { // reverse both origins\r\n    context.drawImage(this.elements.image,\r\n      (-1 * this.elements.image.naturalWidth) + ((-cx + this.data.x) / this.data.scale),\r\n      (-1 * this.elements.image.naturalHeight) + ((-cy + this.data.y) / this.data.scale)\r\n    );\r\n  } else if(this.data.degrees == 270) { // swap axis and reverse the new x origin\r\n    context.drawImage(this.elements.image,\r\n      (-1 * this.elements.image.naturalWidth) + ((-cy + this.data.y) / this.data.scale),\r\n      (cx - this.data.x) / this.data.scale\r\n    );\r\n  }\r\n\r\n  var base64 = canvas.toDataURL('image/jpeg');\r\n  this.events.triggerHandler('Cropped', base64);\r\n  return base64;\r\n};\r\n\r\nCropper.prototype.useHardwareAccelerate = function(element) {\r\n  element.style.perspective = '1000px';\r\n  element.style.backfaceVisibility = 'hidden';\r\n};\r\n\r\nCropper.prototype.extend = function(defaults, options) {\r\n  var target = defaults;\r\n  var defaultsKeys = Object.keys(defaults);\r\n\r\n  defaultsKeys.forEach(function(key, index, keysArray) {\r\n    if (options[key] !== undefined) {\r\n      target[key] = options[key];\r\n    }\r\n  });\r\n\r\n  return target;\r\n};\r\n\r\n/**\r\n * Helper for adding new event listener on element given.\r\n * @param element\r\n * @param eventNames\r\n * @param func\r\n * @param context\r\n */\r\nCropper.prototype.addEventListeners = function(element, eventNames, func, context) {\r\n  eventNames.split(' ').forEach(function(eventName) {\r\n    if (context) {\r\n      element.addEventListener(eventName, func.bind(context), false);\r\n    } else {\r\n      element.addEventListener(eventName, func, false);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Helper for removing event listener in element given.\r\n * @param element\r\n * @param eventNames\r\n * @param func\r\n * @param context\r\n */\r\nCropper.prototype.removeEventListeners = function(element, eventNames, func, context) {\r\n  eventNames.split(' ').forEach(function(eventName) {\r\n    if (context) {\r\n      element.removeEventListener(eventName, func.bind(context), false);\r\n    } else {\r\n      element.removeEventListener(eventName, func, false);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Helper for setting pointer position.\r\n * @param {object} event\r\n * @returns {{x: *, y: *}}\r\n */\r\nCropper.prototype.getPointerPosition = function(event) {\r\n  if (this.isTouchEvent(event)) {\r\n    event = event.touches[0];\r\n  }\r\n  return {\r\n    x: event.pageX,\r\n    y: event.pageY\r\n  };\r\n};\r\n/**\r\n * Helper for testing if the event is valid.\r\n * TODO: Comment this magic thing.\r\n * @param event\r\n * @returns {boolean}\r\n */\r\nCropper.prototype.isValidEvent = function(event) {\r\n  if (this.isTouchEvent(event)) {\r\n    return event.changedTouches.length === 1;\r\n  }\r\n  return event.which === 1;\r\n};\r\n\r\n/**\r\n * Helper for testing if the event is touch.\r\n * @param event\r\n * @returns {boolean}\r\n */\r\nCropper.prototype.isTouchEvent = function(event) {\r\n  return /touch/i.test(event.type);\r\n};\r\n\r\n/**\r\n * Helper for adding a timestamp at the end of an URL.\r\n * @param url\r\n * @returns {string}\r\n */\r\nCropper.prototype.addTimestamp = function(url) {\r\n  var timestamp = 'timestamp=' + (new Date()).getTime();\r\n  var sign = '?';\r\n\r\n  if (url.indexOf('?') !== -1) {\r\n    sign = '&';\r\n  }\r\n\r\n  return url.concat(sign, timestamp);\r\n};\r\n/**\r\n * Helper for checking if the given url is cross origin.\r\n * @param url\r\n * @returns {boolean}\r\n */\r\nCropper.prototype.isCrossOrigin = function(url) {\r\n  var parts = url.match();\r\n\r\n  return Boolean(parts && (\r\n      parts[1] !== location.protocol ||\r\n      parts[2] !== location.hostname ||\r\n      parts[3] !== location.port\r\n    ));\r\n};\r\n\r\n/**\r\n * Helper for converting arrayBuffer to base64.\r\n * @param arrayBuffer\r\n * @returns {string}\r\n */\r\nCropper.prototype.base64ArrayBuffer = function(arrayBuffer) {\r\n  var base64 = '';\r\n  var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n  var bytes = new Uint8Array(arrayBuffer);\r\n  var byteLength = bytes.byteLength;\r\n  var byteRemainder = byteLength % 3;\r\n  var mainLength = byteLength - byteRemainder;\r\n  var a, b, c, d;\r\n  var chunk;\r\n  // Main loop deals with bytes in chunks of 3\r\n  for (var i = 0; i < mainLength; i = i + 3) {\r\n    // Combine the three bytes into a single integer\r\n    chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\r\n    // Use bitmasks to extract 6-bit segments from the triplet\r\n    a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\r\n    b = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\r\n    c = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\r\n    d = chunk & 63;               // 63       = 2^6 - 1\r\n    // Convert the raw binary segments to the appropriate ASCII encoding\r\n    base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\r\n  }\r\n  // Deal with the remaining bytes and padding\r\n  if (byteRemainder == 1) {\r\n    chunk = bytes[mainLength];\r\n    a = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\r\n    // Set the 4 least significant bits to zero\r\n    b = (chunk & 3) << 4; // 3   = 2^2 - 1\r\n    base64 += encodings[a] + encodings[b] + '==';\r\n  } else if (byteRemainder == 2) {\r\n    chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];\r\n    a = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\r\n    b = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\r\n    // Set the 2 least significant bits to zero\r\n    c = (chunk & 15) << 2; // 15    = 2^4 - 1\r\n    base64 += encodings[a] + encodings[b] + encodings[c] + '=';\r\n  }\r\n  return base64;\r\n};\r\n\r\n/**\r\n * Helper for events handler.\r\n */\r\nCropper.prototype.events = new function() {\r\n  var _triggers = {};\r\n\r\n  this.on = function(event, callback) {\r\n    if (!_triggers[event]) {\r\n      _triggers[event] = [];\r\n    }\r\n    _triggers[event].push(callback);\r\n  };\r\n\r\n  this.triggerHandler = function(event, params) {\r\n    if (_triggers[event]) {\r\n      for (var i in _triggers[event]) {\r\n        _triggers[event][i](params);\r\n      }\r\n    }\r\n  };\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

eval("if (false) {\r\n\trequire('./imageCropperDirective.test.js')(angular);\r\n}\r\n\r\nmodule.exports = function (angular, Cropper) {\r\n\t__webpack_require__(4);\r\n\tangular\r\n\t\t.module('imageCropper')\r\n\t\t.directive('imageCropper', function () {\r\n\t\t\tvar imageCropperController = function ($scope) {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tthis.$onInit = function () {\r\n\t\t\t\t\t// Get action labels.\r\n\t\t\t\t\tthis.actionLabels = this.actionLabels();\r\n\r\n\t\t\t\t\t// Get callback.\r\n\t\t\t\t\tthis.apiCallback = this.api();\r\n\t\t\t\t\tthis.cropCallback = this.cropCallback();\r\n\r\n\t\t\t\t\t// Eval for boolean values.\r\n\t\t\t\t\tthis.fitOnInit = eval(this.fitOnInit);\r\n\t\t\t\t\tthis.centerOnInit = eval(this.centerOnInit);\r\n\t\t\t\t\tthis.checkCrossOrigin = eval(this.checkCrossOrigin);\r\n\t\t\t\t\tthis.showControls = eval(this.showControls);\r\n\r\n\t\t\t\t}\r\n\t\t\t\tthis.init = function () {\r\n\t\t\t\t\tthis.target = this.element;\r\n\t\t\t\t\tthis.api = new Cropper(self);\r\n\r\n\t\t\t\t\t$scope.$watch('vm.imageUrl', function (newImageUrl, oldImageUrl) {\r\n\t\t\t\t\t\tif (angular.isDefined(newImageUrl) &&\r\n\t\t\t\t\t\t\t!angular.equals(newImageUrl, oldImageUrl)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tself.api.changeImage(newImageUrl);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\timageCropperController.$inject = ['$scope'];\r\n\r\n\t\t\treturn {\r\n\t\t\t\trestrict: 'E',\r\n\t\t\t\tscope: {\r\n\t\t\t\t\tcenterOnInit: '@',\r\n\t\t\t\t\tcheckCrossOrigin: '@',\r\n\t\t\t\t\tcropCallback: '&',\r\n\t\t\t\t\tapi: '&',\r\n\t\t\t\t\tfitOnInit: '@',\r\n\t\t\t\t\theight: '@',\r\n\t\t\t\t\timageUrl: '@',\r\n\t\t\t\t\tshowControls: '@',\r\n\t\t\t\t\twidth: '@',\r\n\t\t\t\t\tzoomStep: '@',\r\n\t\t\t\t\tactionLabels: '&'\r\n\t\t\t\t},\r\n\t\t\t\tbindToController: true,\r\n\t\t\t\tcontrollerAs: 'vm',\r\n\t\t\t\tcontroller: imageCropperController,\r\n\t\t\t\tlink: function (scope, element, attributes, controller) {\r\n\t\t\t\t\tcontroller.element = element[0];\r\n\t\t\t\t\tcontroller.init()\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VDcm9wcGVyRGlyZWN0aXZlLmpzP2VlZDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaWYgKE9OX1RFU1QpIHtcclxuXHRyZXF1aXJlKCcuL2ltYWdlQ3JvcHBlckRpcmVjdGl2ZS50ZXN0LmpzJykoYW5ndWxhcik7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFuZ3VsYXIsIENyb3BwZXIpIHtcclxuXHRyZXF1aXJlKCcuL2FuZ3VsYXItaW1hZ2UtY3JvcHBlci5zY3NzJyk7XHJcblx0YW5ndWxhclxyXG5cdFx0Lm1vZHVsZSgnaW1hZ2VDcm9wcGVyJylcclxuXHRcdC5kaXJlY3RpdmUoJ2ltYWdlQ3JvcHBlcicsIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0dmFyIGltYWdlQ3JvcHBlckNvbnRyb2xsZXIgPSBmdW5jdGlvbiAoJHNjb3BlKSB7XHJcblx0XHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xyXG5cdFx0XHRcdHRoaXMuJG9uSW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdC8vIEdldCBhY3Rpb24gbGFiZWxzLlxyXG5cdFx0XHRcdFx0dGhpcy5hY3Rpb25MYWJlbHMgPSB0aGlzLmFjdGlvbkxhYmVscygpO1xyXG5cclxuXHRcdFx0XHRcdC8vIEdldCBjYWxsYmFjay5cclxuXHRcdFx0XHRcdHRoaXMuYXBpQ2FsbGJhY2sgPSB0aGlzLmFwaSgpO1xyXG5cdFx0XHRcdFx0dGhpcy5jcm9wQ2FsbGJhY2sgPSB0aGlzLmNyb3BDYWxsYmFjaygpO1xyXG5cclxuXHRcdFx0XHRcdC8vIEV2YWwgZm9yIGJvb2xlYW4gdmFsdWVzLlxyXG5cdFx0XHRcdFx0dGhpcy5maXRPbkluaXQgPSBldmFsKHRoaXMuZml0T25Jbml0KTtcclxuXHRcdFx0XHRcdHRoaXMuY2VudGVyT25Jbml0ID0gZXZhbCh0aGlzLmNlbnRlck9uSW5pdCk7XHJcblx0XHRcdFx0XHR0aGlzLmNoZWNrQ3Jvc3NPcmlnaW4gPSBldmFsKHRoaXMuY2hlY2tDcm9zc09yaWdpbik7XHJcblx0XHRcdFx0XHR0aGlzLnNob3dDb250cm9scyA9IGV2YWwodGhpcy5zaG93Q29udHJvbHMpO1xyXG5cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0dGhpcy5pbml0ID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0dGhpcy50YXJnZXQgPSB0aGlzLmVsZW1lbnQ7XHJcblx0XHRcdFx0XHR0aGlzLmFwaSA9IG5ldyBDcm9wcGVyKHNlbGYpO1xyXG5cclxuXHRcdFx0XHRcdCRzY29wZS4kd2F0Y2goJ3ZtLmltYWdlVXJsJywgZnVuY3Rpb24gKG5ld0ltYWdlVXJsLCBvbGRJbWFnZVVybCkge1xyXG5cdFx0XHRcdFx0XHRpZiAoYW5ndWxhci5pc0RlZmluZWQobmV3SW1hZ2VVcmwpICYmXHJcblx0XHRcdFx0XHRcdFx0IWFuZ3VsYXIuZXF1YWxzKG5ld0ltYWdlVXJsLCBvbGRJbWFnZVVybClcclxuXHRcdFx0XHRcdFx0KSB7XHJcblx0XHRcdFx0XHRcdFx0c2VsZi5hcGkuY2hhbmdlSW1hZ2UobmV3SW1hZ2VVcmwpO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH07XHJcblxyXG5cdFx0XHRpbWFnZUNyb3BwZXJDb250cm9sbGVyLiRpbmplY3QgPSBbJyRzY29wZSddO1xyXG5cclxuXHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHRyZXN0cmljdDogJ0UnLFxyXG5cdFx0XHRcdHNjb3BlOiB7XHJcblx0XHRcdFx0XHRjZW50ZXJPbkluaXQ6ICdAJyxcclxuXHRcdFx0XHRcdGNoZWNrQ3Jvc3NPcmlnaW46ICdAJyxcclxuXHRcdFx0XHRcdGNyb3BDYWxsYmFjazogJyYnLFxyXG5cdFx0XHRcdFx0YXBpOiAnJicsXHJcblx0XHRcdFx0XHRmaXRPbkluaXQ6ICdAJyxcclxuXHRcdFx0XHRcdGhlaWdodDogJ0AnLFxyXG5cdFx0XHRcdFx0aW1hZ2VVcmw6ICdAJyxcclxuXHRcdFx0XHRcdHNob3dDb250cm9sczogJ0AnLFxyXG5cdFx0XHRcdFx0d2lkdGg6ICdAJyxcclxuXHRcdFx0XHRcdHpvb21TdGVwOiAnQCcsXHJcblx0XHRcdFx0XHRhY3Rpb25MYWJlbHM6ICcmJ1xyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0YmluZFRvQ29udHJvbGxlcjogdHJ1ZSxcclxuXHRcdFx0XHRjb250cm9sbGVyQXM6ICd2bScsXHJcblx0XHRcdFx0Y29udHJvbGxlcjogaW1hZ2VDcm9wcGVyQ29udHJvbGxlcixcclxuXHRcdFx0XHRsaW5rOiBmdW5jdGlvbiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJpYnV0ZXMsIGNvbnRyb2xsZXIpIHtcclxuXHRcdFx0XHRcdGNvbnRyb2xsZXIuZWxlbWVudCA9IGVsZW1lbnRbMF07XHJcblx0XHRcdFx0XHRjb250cm9sbGVyLmluaXQoKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fTtcclxuXHRcdH0pO1xyXG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2ltYWdlQ3JvcHBlckRpcmVjdGl2ZS5qc1xuLy8gbW9kdWxlIGlkID0gM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(5);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(7)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./angular-image-cropper.scss\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./angular-image-cropper.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYW5ndWxhci1pbWFnZS1jcm9wcGVyLnNjc3M/OGRmMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxnQ0FBZ0MsVUFBVSxFQUFFO0FBQzVDIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9hbmd1bGFyLWltYWdlLWNyb3BwZXIuc2Nzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7fVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9hbmd1bGFyLWltYWdlLWNyb3BwZXIuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9hbmd1bGFyLWltYWdlLWNyb3BwZXIuc2Nzc1wiKTtcblx0XHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHRcdH0pO1xuXHR9XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvYW5ndWxhci1pbWFnZS1jcm9wcGVyLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(6)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \"body.imgCropper-dragging, body.imgCropper-dragging * {\\n  cursor: move !important;\\n  cursor: -webkit-grabbing !important;\\n  cursor: -moz-grabbing !important;\\n  cursor: grabbing !important;\\n  cursor: grabbing, move;\\n  /* IE hack */ }\\n\\n.imgCropper-wrapper {\\n  display: block;\\n  position: relative;\\n  overflow: hidden;\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n  cursor: grab, move;\\n  /* IE hack */ }\\n\\n.imgCropper-container {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  text-align: center;\\n  margin: 0 !important;\\n  padding: 0 !important;\\n  border: none !important; }\\n\\n.imgCropper-container > * {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  max-width: none;\\n  max-height: none;\\n  width: 100%;\\n  height: 100%;\\n  margin: 0 !important;\\n  padding: 0 !important;\\n  border: none !important; }\\n\\n.imgCropper-sample {\\n  position: absolute !important;\\n  top: -100000px     !important;\\n  left: -100000px    !important;\\n  width: auto        !important;\\n  height: auto       !important; }\\n\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYW5ndWxhci1pbWFnZS1jcm9wcGVyLnNjc3M/NTZkZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7QUFHQTtBQUNBLCtFQUFnRiw0QkFBNEIsd0NBQXdDLHFDQUFxQyxnQ0FBZ0MsMkJBQTJCLG1CQUFtQix5QkFBeUIsbUJBQW1CLHVCQUF1QixxQkFBcUIsaUJBQWlCLHlCQUF5QixzQkFBc0IsaUJBQWlCLHVCQUF1QixtQkFBbUIsMkJBQTJCLHVCQUF1QixXQUFXLFlBQVksdUJBQXVCLHlCQUF5QiwwQkFBMEIsNEJBQTRCLEVBQUUsK0JBQStCLHVCQUF1QixXQUFXLFlBQVksb0JBQW9CLHFCQUFxQixnQkFBZ0IsaUJBQWlCLHlCQUF5QiwwQkFBMEIsNEJBQTRCLEVBQUUsd0JBQXdCLGtDQUFrQyxrQ0FBa0Msa0NBQWtDLGtDQUFrQyxrQ0FBa0MsRUFBRTs7QUFFdmpDIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHVuZGVmaW5lZCk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJib2R5LmltZ0Nyb3BwZXItZHJhZ2dpbmcsIGJvZHkuaW1nQ3JvcHBlci1kcmFnZ2luZyAqIHtcXG4gIGN1cnNvcjogbW92ZSAhaW1wb3J0YW50O1xcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWJiaW5nICFpbXBvcnRhbnQ7XFxuICBjdXJzb3I6IC1tb3otZ3JhYmJpbmcgIWltcG9ydGFudDtcXG4gIGN1cnNvcjogZ3JhYmJpbmcgIWltcG9ydGFudDtcXG4gIGN1cnNvcjogZ3JhYmJpbmcsIG1vdmU7XFxuICAvKiBJRSBoYWNrICovIH1cXG5cXG4uaW1nQ3JvcHBlci13cmFwcGVyIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIGN1cnNvcjogbW92ZTtcXG4gIGN1cnNvcjogLXdlYmtpdC1ncmFiO1xcbiAgY3Vyc29yOiAtbW96LWdyYWI7XFxuICBjdXJzb3I6IGdyYWI7XFxuICBjdXJzb3I6IGdyYWIsIG1vdmU7XFxuICAvKiBJRSBoYWNrICovIH1cXG5cXG4uaW1nQ3JvcHBlci1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIG1hcmdpbjogMCAhaW1wb3J0YW50O1xcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xcbiAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7IH1cXG5cXG4uaW1nQ3JvcHBlci1jb250YWluZXIgPiAqIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuICBtYXgtd2lkdGg6IG5vbmU7XFxuICBtYXgtaGVpZ2h0OiBub25lO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBtYXJnaW46IDAgIWltcG9ydGFudDtcXG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcXG4gIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50OyB9XFxuXFxuLmltZ0Nyb3BwZXItc2FtcGxlIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xcbiAgdG9wOiAtMTAwMDAwcHggICAgICFpbXBvcnRhbnQ7XFxuICBsZWZ0OiAtMTAwMDAwcHggICAgIWltcG9ydGFudDtcXG4gIHdpZHRoOiBhdXRvICAgICAgICAhaW1wb3J0YW50O1xcbiAgaGVpZ2h0OiBhdXRvICAgICAgICFpbXBvcnRhbnQ7IH1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyIS4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zcmMvYW5ndWxhci1pbWFnZS1jcm9wcGVyLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanM/MTU5ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdCQUFnQjtBQUNuRCxJQUFJO0FBQ0o7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxjQUFjOztBQUVsRTtBQUNBIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(8);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzPzk4OTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxXQUFXLEVBQUU7QUFDckQsd0NBQXdDLFdBQVcsRUFBRTs7QUFFckQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxzQ0FBc0M7QUFDdEMsR0FBRztBQUNIO0FBQ0EsOERBQThEO0FBQzlEOztBQUVBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQSIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIFdoZW4gc291cmNlIG1hcHMgYXJlIGVuYWJsZWQsIGBzdHlsZS1sb2FkZXJgIHVzZXMgYSBsaW5rIGVsZW1lbnQgd2l0aCBhIGRhdGEtdXJpIHRvXG4gKiBlbWJlZCB0aGUgY3NzIG9uIHRoZSBwYWdlLiBUaGlzIGJyZWFrcyBhbGwgcmVsYXRpdmUgdXJscyBiZWNhdXNlIG5vdyB0aGV5IGFyZSByZWxhdGl2ZSB0byBhXG4gKiBidW5kbGUgaW5zdGVhZCBvZiB0aGUgY3VycmVudCBwYWdlLlxuICpcbiAqIE9uZSBzb2x1dGlvbiBpcyB0byBvbmx5IHVzZSBmdWxsIHVybHMsIGJ1dCB0aGF0IG1heSBiZSBpbXBvc3NpYmxlLlxuICpcbiAqIEluc3RlYWQsIHRoaXMgZnVuY3Rpb24gXCJmaXhlc1wiIHRoZSByZWxhdGl2ZSB1cmxzIHRvIGJlIGFic29sdXRlIGFjY29yZGluZyB0byB0aGUgY3VycmVudCBwYWdlIGxvY2F0aW9uLlxuICpcbiAqIEEgcnVkaW1lbnRhcnkgdGVzdCBzdWl0ZSBpcyBsb2NhdGVkIGF0IGB0ZXN0L2ZpeFVybHMuanNgIGFuZCBjYW4gYmUgcnVuIHZpYSB0aGUgYG5wbSB0ZXN0YCBjb21tYW5kLlxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3MpIHtcbiAgLy8gZ2V0IGN1cnJlbnQgbG9jYXRpb25cbiAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubG9jYXRpb247XG5cbiAgaWYgKCFsb2NhdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO1xuICB9XG5cblx0Ly8gYmxhbmsgb3IgbnVsbD9cblx0aWYgKCFjc3MgfHwgdHlwZW9mIGNzcyAhPT0gXCJzdHJpbmdcIikge1xuXHQgIHJldHVybiBjc3M7XG4gIH1cblxuICB2YXIgYmFzZVVybCA9IGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgbG9jYXRpb24uaG9zdDtcbiAgdmFyIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XG5cblx0Ly8gY29udmVydCBlYWNoIHVybCguLi4pXG5cdC8qXG5cdFRoaXMgcmVndWxhciBleHByZXNzaW9uIGlzIGp1c3QgYSB3YXkgdG8gcmVjdXJzaXZlbHkgbWF0Y2ggYnJhY2tldHMgd2l0aGluXG5cdGEgc3RyaW5nLlxuXG5cdCAvdXJsXFxzKlxcKCAgPSBNYXRjaCBvbiB0aGUgd29yZCBcInVybFwiIHdpdGggYW55IHdoaXRlc3BhY2UgYWZ0ZXIgaXQgYW5kIHRoZW4gYSBwYXJlbnNcblx0ICAgKCAgPSBTdGFydCBhIGNhcHR1cmluZyBncm91cFxuXHQgICAgICg/OiAgPSBTdGFydCBhIG5vbi1jYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAgICAgW14pKF0gID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICg/OiAgPSBTdGFydCBhbm90aGVyIG5vbi1jYXB0dXJpbmcgZ3JvdXBzXG5cdCAgICAgICAgICAgICAgICAgW14pKF0rICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgICAgICBbXikoXSogID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgXFwpICA9IE1hdGNoIGEgZW5kIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICApICA9IEVuZCBHcm91cFxuICAgICAgICAgICAgICAqXFwpID0gTWF0Y2ggYW55dGhpbmcgYW5kIHRoZW4gYSBjbG9zZSBwYXJlbnNcbiAgICAgICAgICApICA9IENsb3NlIG5vbi1jYXB0dXJpbmcgZ3JvdXBcbiAgICAgICAgICAqICA9IE1hdGNoIGFueXRoaW5nXG4gICAgICAgKSAgPSBDbG9zZSBjYXB0dXJpbmcgZ3JvdXBcblx0IFxcKSAgPSBNYXRjaCBhIGNsb3NlIHBhcmVuc1xuXG5cdCAvZ2kgID0gR2V0IGFsbCBtYXRjaGVzLCBub3QgdGhlIGZpcnN0LiAgQmUgY2FzZSBpbnNlbnNpdGl2ZS5cblx0ICovXG5cdHZhciBmaXhlZENzcyA9IGNzcy5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSwgZnVuY3Rpb24oZnVsbE1hdGNoLCBvcmlnVXJsKSB7XG5cdFx0Ly8gc3RyaXAgcXVvdGVzIChpZiB0aGV5IGV4aXN0KVxuXHRcdHZhciB1bnF1b3RlZE9yaWdVcmwgPSBvcmlnVXJsXG5cdFx0XHQudHJpbSgpXG5cdFx0XHQucmVwbGFjZSgvXlwiKC4qKVwiJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KVxuXHRcdFx0LnJlcGxhY2UoL14nKC4qKSckLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pO1xuXG5cdFx0Ly8gYWxyZWFkeSBhIGZ1bGwgdXJsPyBubyBjaGFuZ2Vcblx0XHRpZiAoL14oI3xkYXRhOnxodHRwOlxcL1xcL3xodHRwczpcXC9cXC98ZmlsZTpcXC9cXC9cXC8pL2kudGVzdCh1bnF1b3RlZE9yaWdVcmwpKSB7XG5cdFx0ICByZXR1cm4gZnVsbE1hdGNoO1xuXHRcdH1cblxuXHRcdC8vIGNvbnZlcnQgdGhlIHVybCB0byBhIGZ1bGwgdXJsXG5cdFx0dmFyIG5ld1VybDtcblxuXHRcdGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi8vXCIpID09PSAwKSB7XG5cdFx0ICBcdC8vVE9ETzogc2hvdWxkIHdlIGFkZCBwcm90b2NvbD9cblx0XHRcdG5ld1VybCA9IHVucXVvdGVkT3JpZ1VybDtcblx0XHR9IGVsc2UgaWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiL1wiKSA9PT0gMCkge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlIGJhc2UgdXJsXG5cdFx0XHRuZXdVcmwgPSBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsOyAvLyBhbHJlYWR5IHN0YXJ0cyB3aXRoICcvJ1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byBjdXJyZW50IGRpcmVjdG9yeVxuXHRcdFx0bmV3VXJsID0gY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIik7IC8vIFN0cmlwIGxlYWRpbmcgJy4vJ1xuXHRcdH1cblxuXHRcdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgdXJsKC4uLilcblx0XHRyZXR1cm4gXCJ1cmwoXCIgKyBKU09OLnN0cmluZ2lmeShuZXdVcmwpICsgXCIpXCI7XG5cdH0pO1xuXG5cdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgY3NzXG5cdHJldHVybiBmaXhlZENzcztcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanNcbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n");

/***/ })
/******/ ]);
});