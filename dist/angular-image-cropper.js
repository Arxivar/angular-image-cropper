(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("angular"));
	else if(typeof define === 'function' && define.amd)
		define(["angular"], factory);
	else if(typeof exports === 'object')
		exports["imageCropper"] = factory(require("angular"));
	else
		root["imageCropper"] = factory(root["angular"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("var angular = __webpack_require__(1);\r\n\r\nvar ngModule = angular.module('imageCropper', []);\r\n\r\nvar Cropper = __webpack_require__(2);\r\n__webpack_require__(3)(angular, Cropper);\r\n\r\nmodule.exports = 'imageCropper';//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/OTU1MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYW5ndWxhciA9IHJlcXVpcmUoJ2FuZ3VsYXInKTtcclxuXHJcbnZhciBuZ01vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdpbWFnZUNyb3BwZXInLCBbXSk7XHJcblxyXG52YXIgQ3JvcHBlciA9IHJlcXVpcmUoJy4vaW1hZ2VDcm9wcGVyJyk7XHJcbnJlcXVpcmUoJy4vaW1hZ2VDcm9wcGVyRGlyZWN0aXZlJykoYW5ndWxhciwgQ3JvcHBlcik7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9ICdpbWFnZUNyb3BwZXInO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSAwXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 1 */
/***/ function(module, exports) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_1__;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJhbmd1bGFyXCI/MTFkMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzFfXztcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiYW5ndWxhclwiXG4gKiogbW9kdWxlIGlkID0gMVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 2 */
/***/ function(module, exports) {

	eval("module.exports = Cropper;\r\n\r\n/**\r\n * Cropper.\r\n * @param options\r\n * @returns {Cropper}\r\n * @constructor\r\n */\r\nfunction Cropper(options) {\r\n\r\n  if (!options.imageUrl) {\r\n    throw new Error('Cropper: No image url given.');\r\n  }\r\n\r\n  this.isReady = false;\r\n  this.originalUrl = options.imageUrl;\r\n\r\n  // Default options.\r\n  var defaults = {\r\n    checkCrossOrigin: false,\r\n    apiCallback: undefined,\r\n    cropCallback: undefined,\r\n    width: 400,\r\n    height: 300,\r\n    imageUrl: undefined,\r\n    target: undefined,\r\n    showControls: true,\r\n    fitOnInit: false,\r\n    centerOnInit: false,\r\n    zoomStep: 0.1,\r\n    actionLabels: {\r\n      rotateLeft: ' < ',\r\n      rotateRight: ' > ',\r\n      zoomIn: ' + ',\r\n      zoomOut: ' - ',\r\n      fit: '(fit)',\r\n      crop: '[crop]'\r\n    }\r\n  };\r\n\r\n  // Setup options.\r\n  this.options = this.extend(defaults, options);\r\n\r\n  // Setup gesture events.\r\n  this.gesture = {};\r\n  this.gesture.events = {\r\n    start: 'touchstart mousedown',\r\n    move: 'touchmove mousemove',\r\n    stop: 'touchend mouseup'\r\n  };\r\n\r\n  this.pointerPosition = undefined;\r\n\r\n  // Setup basic elements.\r\n  this.elements = {\r\n    target: options.target,\r\n    body: document.getElementsByTagName('body')[0]\r\n  };\r\n\r\n  this.buildDOM();\r\n  this.useHardwareAccelerate(this.elements.image);\r\n\r\n  // API Setup:\r\n  var api = {\r\n    crop: this.cropImage.bind(this),\r\n    fit: this.applyFit.bind(this),\r\n    rotate: this.applyRotation.bind(this),\r\n    zoomIn: this.applyZoomIn.bind(this),\r\n    zoomOut: this.applyZoomOut.bind(this),\r\n    remove: this.remove.bind(this)\r\n  };\r\n\r\n  /**\r\n   * Initialization of the Cropper (dimensions, event binding...).\r\n   */\r\n  this.events.on('ImageReady', this.initialize.bind(this));\r\n\r\n  /**\r\n   * Execute callback function when cropped.\r\n   */\r\n  if (this.options.cropCallback) {\r\n    this.events.on('Cropped', function(base64) {\r\n      this.options.cropCallback(base64);\r\n    }.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Send API when image is ready if readyCallback is true.\r\n   */\r\n  if (this.options.apiCallback) {\r\n    this.events.on('ImageReady', function() {\r\n      this.options.apiCallback(api);\r\n    }.bind(this));\r\n  }\r\n}\r\n\r\nCropper.prototype.initialize = function() {\r\n  this.setDimensions();\r\n\r\n  if (this.imageHasToFit()) {\r\n    this.fitImage();\r\n    this.centerImage();\r\n  }\r\n  this.initializeGesture();\r\n\r\n  if (this.options.centerOnInit) {\r\n    this.centerImage();\r\n  }\r\n\r\n  if (this.options.showControls) {\r\n    this.bindControls();\r\n  }\r\n};\r\n\r\nCropper.prototype.bindControls = function() {\r\n  var self = this;\r\n  this.elements.controls.rotateLeft.addEventListener('click', function() {\r\n    self.applyRotation(-90);\r\n  });\r\n  this.elements.controls.rotateRight.addEventListener('click', function() {\r\n    self.applyRotation(90);\r\n  });\r\n  this.elements.controls.zoomIn.addEventListener('click', function() {\r\n    self.applyZoomIn(self.zoomInFactor);\r\n  });\r\n  this.elements.controls.zoomOut.addEventListener('click', function() {\r\n    self.applyZoomOut(self.zoomOutFactor);\r\n  });\r\n  this.elements.controls.fit.addEventListener('click', this.applyFit.bind(this));\r\n  this.elements.controls.crop.addEventListener('click', this.cropImage.bind(this));\r\n};\r\n\r\nCropper.prototype.applyRotation = function(degree) {\r\n  this.rotateImage(degree);\r\n};\r\n\r\nCropper.prototype.applyZoomIn = function(zoom) {\r\n  this.zoomImage(1 + parseFloat(zoom));\r\n};\r\nCropper.prototype.applyZoomOut = function(zoom) {\r\n  this.zoomImage(1 / ( 1 + parseFloat(zoom)));\r\n};\r\n\r\nCropper.prototype.applyFit = function() {\r\n  this.fitImage();\r\n  this.centerImage();\r\n};\r\n\r\nCropper.prototype.imageHasToFit = function() {\r\n  return this.elements.image.naturalWidth < this.options.width ||\r\n    this.elements.image.naturalHeight < this.options.height ||\r\n    this.width < 1 || this.height < 1 || // 1 means 100%.\r\n    this.options.fitOnInit;\r\n};\r\n\r\n/**\r\n * Build DOM element for the Cropper appended in the targeted element.\r\n */\r\nCropper.prototype.buildDOM = function() {\r\n  var _elements;\r\n  _elements = this.elements;\r\n\r\n  // Wrapper.\r\n  _elements.wrapper = document.createElement('div');\r\n  _elements.wrapper.className = 'imgCropper-wrapper';\r\n\r\n  // Container.\r\n  _elements.container = document.createElement('div');\r\n  _elements.container.className = 'imgCropper-container';\r\n\r\n  // Image.\r\n  _elements.image = document.createElement('img');\r\n  _elements.image.className = 'imgCropper-image';\r\n\r\n\r\n  // Target -> Wrapper -> Container -> Image\r\n  _elements.container.appendChild(_elements.image);\r\n  _elements.wrapper.appendChild(_elements.container);\r\n  _elements.target.appendChild(_elements.wrapper);\r\n\r\n  if (!this.options.showControls) {\r\n    return this.loadImage();\r\n  }\r\n\r\n  // Controls.\r\n  _elements.controls = {};\r\n  _elements.controls.wrapper = document.createElement('div');\r\n  _elements.controls.wrapper.className = 'imgCropper-controls';\r\n\r\n  _elements.controls.rotateLeft = this._buildControl(this.options.actionLabels.rotateLeft);\r\n  _elements.controls.rotateRight = this._buildControl(this.options.actionLabels.rotateRight);\r\n  _elements.controls.zoomIn = this._buildControl(this.options.actionLabels.zoomIn);\r\n  _elements.controls.zoomOut = this._buildControl(this.options.actionLabels.zoomOut);\r\n  _elements.controls.fit = this._buildControl(this.options.actionLabels.fit);\r\n\r\n  _elements.controls.crop = this._buildControl(this.options.actionLabels.crop);\r\n\r\n\t// Target -> Wrapper -> buttons\r\n\t//d.parisi non passando la relativa label Ã¨ ora possibile nascondere un bottone\r\n\tif(this.options.actionLabels.rotateLeft){\r\n\t\t_elements.controls.wrapper.appendChild(_elements.controls.rotateLeft);\r\n\t}\r\n\tif(this.options.actionLabels.zoomOut){\r\n\t\t_elements.controls.wrapper.appendChild(_elements.controls.zoomOut);\r\n\t}\r\n\tif(this.options.actionLabels.fit){\r\n\t\t_elements.controls.wrapper.appendChild(_elements.controls.fit);\r\n\t}\r\n\tif(this.options.actionLabels.crop){\r\n\t\t_elements.controls.wrapper.appendChild(_elements.controls.crop);\r\n\t}\r\n\tif(this.options.actionLabels.zoomIn){\r\n\t\t_elements.controls.wrapper.appendChild(_elements.controls.zoomIn);\r\n\t}\r\n\tif(this.options.actionLabels.rotateRight){\r\n\t\t_elements.controls.wrapper.appendChild(_elements.controls.rotateRight);\r\n\t}\r\n\r\n\t_elements.target.appendChild(_elements.controls.wrapper);\r\n  this.loadImage();\r\n};\r\n\r\n/**\r\n * Build control element.\r\n * @param label\r\n * @returns {Element}\r\n */\r\nCropper.prototype._buildControl = function(label) {\r\n  var control = document.createElement('button');\r\n  control.setAttribute('type', 'button');\r\n  control.innerHTML = label;\r\n\r\n  return control;\r\n};\r\n\r\n/**\r\n * Remove all DOM element parts of the Cropper.\r\n */\r\nCropper.prototype.remove = function() {\r\n  var elements = this.elements;\r\n  elements.target.removeChild(elements.wrapper);\r\n  if (this.options.showControls) elements.target.removeChild(elements.controls.wrapper);\r\n};\r\n\r\nCropper.prototype.loadImage = function() {\r\n  var self = this;\r\n  var xhr;\r\n\r\n  // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari.\r\n  if (/^data\\:/.test(this.originalUrl)) {\r\n    this.originalBase64 = this.originalUrl;\r\n    return this.setupImageSRC();\r\n  }\r\n\r\n  xhr = new XMLHttpRequest();\r\n  xhr.onerror = xhr.onabort = function(response) {\r\n    self.originalBase64 = self.originalUrl;\r\n    self.setupImageSRC();\r\n  };\r\n\r\n  // Need to have proper sets of 'Access-Control-Allow-Origin' on the requested resource server.\r\n  xhr.onload = function() {\r\n    self.originalArrayBuffer = this.response;\r\n    self.originalBase64 = 'data:image/jpeg;base64,' + self.base64ArrayBuffer(this.response);\r\n    self.setupImageSRC();\r\n  };\r\n  xhr.open('get', this.originalUrl, true);\r\n  //xhr.setRequestHeader('Content-Type', 'image/jpg'); // TODO: Auto determine the image MIME's type.\r\n  xhr.responseType = 'arraybuffer';\r\n  xhr.send();\r\n};\r\n\r\n/**\r\n * Check crossOrigins and setup image src.\r\n */\r\nCropper.prototype.setupImageSRC = function() {\r\n  var _image = this.elements.image;\r\n\r\n  if (this.options.checkCrossOrigin && this.isCrossOrigin(this.originalUrl)) {\r\n    this.crossOrigin = _image.crossOrigin;\r\n\r\n    if (this.crossOrigin) {\r\n      this.crossOrigin = this.originalUrl;\r\n    } else {\r\n      this.crossOrigin = 'anonymous';\r\n\r\n      // Bust cache with a timestamp.\r\n      this.crossOriginUrl = this.addTimestamp(this.originalUrl);\r\n    }\r\n  }\r\n\r\n  if (this.crossOrigin) {\r\n    this.elements.image.crossOrigin = this.crossOrigin;\r\n  }\r\n\r\n  // Setup image src.\r\n  this.elements.image.src = this.crossOriginUrl || this.originalUrl; // Need to verify.\r\n  //this.elements.image.src = this.originalBase64; // Need to verify.\r\n\r\n  // Waiting the image as loaded to trigger event.\r\n  this.elements.image.onload = function() {\r\n    this.events.triggerHandler('ImageReady');\r\n  }.bind(this);\r\n};\r\n\r\n/**\r\n * Set dimensions.\r\n */\r\nCropper.prototype.setDimensions = function() {\r\n  this.zoomInFactor = 1 + parseFloat(this.options.zoomStep);\r\n  this.zoomOutFactor = 1 / this.zoomInFactor;\r\n\r\n  this.imageRatio = this.options.height / this.options.width;\r\n  this.width = this.elements.image.naturalWidth / this.options.width;\r\n  this.height = this.elements.image.naturalHeight / this.options.height;\r\n  this.left = 0;\r\n  this.top = 0;\r\n  this.angle = 0;\r\n  this.data = {\r\n    scale: 1,\r\n    degrees: 0,\r\n    x: 0,\r\n    y: 0,\r\n    w: this.options.width,\r\n    h: this.options.height\r\n  };\r\n\r\n  // Container.\r\n  this.elements.container.style.width = this.width * 100 + '%';\r\n  this.elements.container.style.height = this.height * 100 + '%';\r\n  this.elements.container.style.top = 0;\r\n  this.elements.container.style.left = 0;\r\n\r\n  // Wrapper.\r\n  this.elements.wrapper.style.height = 'auto';\r\n  this.elements.wrapper.style.width = '100%';\r\n  this.elements.wrapper.style.paddingTop = (this.imageRatio * 100) + '%';\r\n\r\n  this.isReady = true;\r\n};\r\n\r\n/**\r\n * Image should be already loaded.\r\n */\r\nCropper.prototype.initializeGesture = function() {\r\n  var self = this;\r\n  this.addEventListeners(this.elements.image, this.gesture.events.start, function(event) {\r\n    if (self.isReady && self.isValidEvent(event)) {\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation();\r\n      self.pointerPosition = self.getPointerPosition(event);\r\n      bind();\r\n    }\r\n  });\r\n\r\n  var bind = function() {\r\n    self.elements.body.classList.add('imgCropper-dragging');\r\n    self.addEventListeners(self.elements.body, self.gesture.events.move, drag);\r\n    self.addEventListeners(self.elements.body, self.gesture.events.stop, unbind);\r\n  };\r\n\r\n  var unbind = function() {\r\n    self.elements.body.classList.remove('imgCropper-dragging');\r\n    self.removeEventListeners(self.elements.body, self.gesture.events.move, drag);\r\n    self.removeEventListeners(self.elements.body, self.gesture.events.stop, unbind);\r\n  };\r\n\r\n  var drag = function(event) {\r\n    self.dragging.call(self, event);\r\n  };\r\n};\r\n\r\n/**\r\n * Dragging action.\r\n * @param event\r\n */\r\nCropper.prototype.dragging = function(event) {\r\n  var dx, dy, left, p, top;\r\n  event.preventDefault();\r\n  event.stopImmediatePropagation();\r\n\r\n  p = this.getPointerPosition(event); // Cursor position after moving.\r\n\r\n  dx = p.x - this.pointerPosition.x; // Difference (cursor movement) on X axes.\r\n  dy = p.y - this.pointerPosition.y; // Difference (cursor movement) on Y axes.\r\n\r\n  this.pointerPosition = p; // Update cursor position.\r\n\r\n  /**\r\n   * dx > 0 if moving right.\r\n   * dx / clientWidth is the percentage of the wrapper's width it moved over X.\r\n   */\r\n  left = (dx === 0)? null : this.left - dx / this.elements.wrapper.clientWidth;\r\n\r\n  /**\r\n   * dy > 0 if moving down.\r\n   * dy / clientHeight is the percentage of the wrapper's width it moved over Y.\r\n   */\r\n  top = (dy === 0)? null : this.top - dy / this.elements.wrapper.clientHeight;\r\n\r\n  // Move.\r\n  this.setOffset(left, top);\r\n};\r\n\r\n/**\r\n * Set image offset manipulations.\r\n * @param left {number} is a relative number.\r\n * @param top {number} is a relative number.\r\n */\r\nCropper.prototype.setOffset = function(left, top) {\r\n  /**\r\n   * Offset left.\r\n   */\r\n  if (left || left === 0) {\r\n    if (left < 0) { left = 0; }\r\n    if (left > this.width - 1) { left = this.width - 1; }\r\n\r\n    this.elements.container.style.left = (-left * 100).toFixed(2) + '%';\r\n    this.left = left;\r\n    this.data.x = Math.round(left * this.options.width);\r\n  }\r\n\r\n  /**\r\n   * Offset top.\r\n   */\r\n  if (top || top === 0) {\r\n    if (top < 0) { top = 0; }\r\n    if (top > this.height - 1) { top = this.height - 1; }\r\n\r\n    this.elements.container.style.top = (-top * 100).toFixed(2) + '%';\r\n    this.top = top;\r\n    this.data.y = Math.round(top * this.options.height);\r\n  }\r\n};\r\n\r\nCropper.prototype.fitImage = function() {\r\n  var prevWidth, relativeRatio;\r\n\r\n  prevWidth = this.width;\r\n  relativeRatio = this.height / this.width;\r\n\r\n  if (relativeRatio > 1) {\r\n    this.width = 1;\r\n    this.height = relativeRatio;\r\n  } else {\r\n    this.width = 1 / relativeRatio;\r\n    this.height = 1;\r\n  }\r\n\r\n  this.elements.container.style.width = (this.width * 100).toFixed(2) + '%';\r\n  this.elements.container.style.height = (this.height * 100).toFixed(2) + '%';\r\n\r\n  this.data.scale *= this.width / prevWidth;\r\n};\r\n\r\nCropper.prototype.centerImage = function() {\r\n  this.setOffset((this.width - 1) / 2, (this.height - 1) / 2);\r\n};\r\n\r\n/**\r\n * Do a rotation on the image with degrees given.\r\n * @param degrees\r\n */\r\nCropper.prototype.rotateImage = function(degrees) {\r\n  // Only rotate of 90Â°.\r\n  if (!(degrees !== 0 && degrees % 90 === 0)) {\r\n    throw new Error('Cropper: Support only multiple of 90Â° for rotation.');\r\n  }\r\n\r\n  // Smallest positive equivalent angle (total rotation).\r\n  this.angle = (this.angle + degrees) % 360;\r\n  if (this.angle < 0) {\r\n    this.angle += 360;\r\n  }\r\n\r\n  // Dimensions are changed?\r\n  if (degrees % 180 !== 0) {\r\n    /**\r\n     * Switch canvas dimensions (as percentages).\r\n     * canvasWidth = @width * this.options.width; canvasHeight = @height * this.options.height\r\n     * To make canvasWidth = canvasHeight (to switch dimensions):\r\n     * => newWidth * this.options.width = @height * this.options.height\r\n     * => newWidth = @height * this.options.height / this.options.width\r\n     * => newWidth = @height * this.imageRatio\r\n     */\r\n    var tempW = this.height * this.imageRatio;\r\n    var tempH = this.width / this.imageRatio;\r\n    this.width = tempW;\r\n    this.height = tempH;\r\n    if (this.width >= 1 && this.height >= 1) {\r\n      this.elements.container.style.width = this.width * 100 + '%';\r\n      this.elements.container.style.height = this.height * 100 + '%';\r\n    } else {\r\n      this.fitImage();\r\n    }\r\n  }\r\n\r\n  var newWidth = 1;\r\n  var newHeight = 1;\r\n\r\n  // Adjust element's (image) dimensions inside the container.\r\n  if (this.angle % 180 !== 0) {\r\n    var ratio = this.height / this.width * this.imageRatio;\r\n    newWidth = ratio;\r\n    newHeight = 1 / ratio;\r\n  }\r\n\r\n  this.elements.image.style.width = newWidth * 100 + '%';\r\n  this.elements.image.style.height = newHeight * 100 + '%';\r\n  this.elements.image.style.left = (1 - newWidth) / 2 * 100 + '%';\r\n  this.elements.image.style.top = (1 - newHeight) / 2 * 100 + '%';\r\n\r\n\r\n  this.elements.image.style.transform = 'rotate(' + this.angle + 'deg)';\r\n  this.elements.image.style.webkitTransform = 'rotate(' + this.angle + 'deg)';\r\n  this.elements.image.style.mozTransform = 'rotate(' + this.angle + 'deg)';\r\n  this.elements.image.style.msTransform = 'rotate(' + this.angle + 'deg)';\r\n  this.elements.image.style.oTransform = 'rotate(' + this.angle + 'deg)';\r\n\r\n  this.centerImage();\r\n  this.data.degrees = this.angle;\r\n};\r\n\r\nCropper.prototype.zoomImage = function(factor) {\r\n  if (factor <= 0 || factor == 1) {\r\n    return;\r\n  }\r\n\r\n  var originalWidth = this.width;\r\n\r\n  if (this.width * factor > 1 && this.height * factor > 1) {\r\n    this.height *= factor;\r\n    this.width *= factor;\r\n    this.elements.container.style.height = (this.height * 100).toFixed(2) + '%';\r\n    this.elements.container.style.width = (this.width * 100).toFixed(2) + '%';\r\n    this.data.scale *= factor;\r\n  } else {\r\n    this.fitImage();\r\n    factor = this.width / originalWidth;\r\n  }\r\n\r\n  /**\r\n   * Keep window center.\r\n   * The offsets are the distances between the image point in the center of the wrapper\r\n   * and each edge of the image, less half the size of the window.\r\n   * Percentage offsets are relative to the container (the wrapper), so half the wrapper\r\n   * is 50% (0.5) and when zooming the distance between any two points in the image\r\n   * grows by 'factor', so the new offsets are:\r\n   *\r\n   * offset = (prev-center-to-edge) * factor - half-window\r\n   *\r\n   */\r\n  var left = (this.left + 0.5) * factor - 0.5;\r\n  var top = (this.top + 0.5) * factor - 0.5;\r\n\r\n  this.setOffset(left, top);\r\n};\r\n\r\nCropper.prototype.cropImage = function() {\r\n  return this.cropHandler();\r\n};\r\n\r\nCropper.prototype.cropHandler = function() {\r\n  var canvas, context;\r\n\r\n  canvas = document.createElement('canvas');\r\n  canvas.height = this.options.height;\r\n  canvas.width = this.options.width;\r\n\r\n  var cx = -canvas.width / 2;\r\n  var cy = -canvas.height / 2;\r\n\r\n  context = canvas.getContext('2d');\r\n  context.translate(-cx,-cy); //move to centre of canvas\r\n  context.rotate(this.data.degrees * Math.PI/180);\r\n  context.scale(this.data.scale, this.data.scale);\r\n\r\n  if(this.data.degrees == 0) { // simple offsets from canvas centre & scale\r\n    context.drawImage(this.elements.image,\r\n      (cx - this.data.x) / this.data.scale,\r\n      (cy - this.data.y) / this.data.scale\r\n    );\r\n  } else if(this.data.degrees == 90) { // swap axis and reverse the new y origin\r\n    context.drawImage(this.elements.image,\r\n      (cy - this.data.y) / this.data.scale,\r\n      (-1 * this.elements.image.naturalHeight) + ((-cx + this.data.x) / this.data.scale)\r\n    );\r\n  } else if(this.data.degrees == 180) { // reverse both origins\r\n    context.drawImage(this.elements.image,\r\n      (-1 * this.elements.image.naturalWidth) + ((-cx + this.data.x) / this.data.scale),\r\n      (-1 * this.elements.image.naturalHeight) + ((-cy + this.data.y) / this.data.scale)\r\n    );\r\n  } else if(this.data.degrees == 270) { // swap axis and reverse the new x origin\r\n    context.drawImage(this.elements.image,\r\n      (-1 * this.elements.image.naturalWidth) + ((-cy + this.data.y) / this.data.scale),\r\n      (cx - this.data.x) / this.data.scale\r\n    );\r\n  }\r\n\r\n  var base64 = canvas.toDataURL('image/jpeg');\r\n  this.events.triggerHandler('Cropped', base64);\r\n  return base64;\r\n};\r\n\r\nCropper.prototype.useHardwareAccelerate = function(element) {\r\n  element.style.perspective = '1000px';\r\n  element.style.backfaceVisibility = 'hidden';\r\n};\r\n\r\nCropper.prototype.extend = function(defaults, options) {\r\n  var target = defaults;\r\n  var defaultsKeys = Object.keys(defaults);\r\n\r\n  defaultsKeys.forEach(function(key, index, keysArray) {\r\n    if (options[key] !== undefined) {\r\n      target[key] = options[key];\r\n    }\r\n  });\r\n\r\n  return target;\r\n};\r\n\r\n/**\r\n * Helper for adding new event listener on element given.\r\n * @param element\r\n * @param eventNames\r\n * @param func\r\n * @param context\r\n */\r\nCropper.prototype.addEventListeners = function(element, eventNames, func, context) {\r\n  eventNames.split(' ').forEach(function(eventName) {\r\n    if (context) {\r\n      element.addEventListener(eventName, func.bind(context), false);\r\n    } else {\r\n      element.addEventListener(eventName, func, false);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Helper for removing event listener in element given.\r\n * @param element\r\n * @param eventNames\r\n * @param func\r\n * @param context\r\n */\r\nCropper.prototype.removeEventListeners = function(element, eventNames, func, context) {\r\n  eventNames.split(' ').forEach(function(eventName) {\r\n    if (context) {\r\n      element.removeEventListener(eventName, func.bind(context), false);\r\n    } else {\r\n      element.removeEventListener(eventName, func, false);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Helper for setting pointer position.\r\n * @param {object} event\r\n * @returns {{x: *, y: *}}\r\n */\r\nCropper.prototype.getPointerPosition = function(event) {\r\n  if (this.isTouchEvent(event)) {\r\n    event = event.touches[0];\r\n  }\r\n  return {\r\n    x: event.pageX,\r\n    y: event.pageY\r\n  };\r\n};\r\n/**\r\n * Helper for testing if the event is valid.\r\n * TODO: Comment this magic thing.\r\n * @param event\r\n * @returns {boolean}\r\n */\r\nCropper.prototype.isValidEvent = function(event) {\r\n  if (this.isTouchEvent(event)) {\r\n    return event.changedTouches.length === 1;\r\n  }\r\n  return event.which === 1;\r\n};\r\n\r\n/**\r\n * Helper for testing if the event is touch.\r\n * @param event\r\n * @returns {boolean}\r\n */\r\nCropper.prototype.isTouchEvent = function(event) {\r\n  return /touch/i.test(event.type);\r\n};\r\n\r\n/**\r\n * Helper for adding a timestamp at the end of an URL.\r\n * @param url\r\n * @returns {string}\r\n */\r\nCropper.prototype.addTimestamp = function(url) {\r\n  var timestamp = 'timestamp=' + (new Date()).getTime();\r\n  var sign = '?';\r\n\r\n  if (url.indexOf('?') !== -1) {\r\n    sign = '&';\r\n  }\r\n\r\n  return url.concat(sign, timestamp);\r\n};\r\n/**\r\n * Helper for checking if the given url is cross origin.\r\n * @param url\r\n * @returns {boolean}\r\n */\r\nCropper.prototype.isCrossOrigin = function(url) {\r\n  var parts = url.match();\r\n\r\n  return Boolean(parts && (\r\n      parts[1] !== location.protocol ||\r\n      parts[2] !== location.hostname ||\r\n      parts[3] !== location.port\r\n    ));\r\n};\r\n\r\n/**\r\n * Helper for converting arrayBuffer to base64.\r\n * @param arrayBuffer\r\n * @returns {string}\r\n */\r\nCropper.prototype.base64ArrayBuffer = function(arrayBuffer) {\r\n  var base64 = '';\r\n  var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n  var bytes = new Uint8Array(arrayBuffer);\r\n  var byteLength = bytes.byteLength;\r\n  var byteRemainder = byteLength % 3;\r\n  var mainLength = byteLength - byteRemainder;\r\n  var a, b, c, d;\r\n  var chunk;\r\n  // Main loop deals with bytes in chunks of 3\r\n  for (var i = 0; i < mainLength; i = i + 3) {\r\n    // Combine the three bytes into a single integer\r\n    chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\r\n    // Use bitmasks to extract 6-bit segments from the triplet\r\n    a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\r\n    b = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\r\n    c = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\r\n    d = chunk & 63;               // 63       = 2^6 - 1\r\n    // Convert the raw binary segments to the appropriate ASCII encoding\r\n    base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\r\n  }\r\n  // Deal with the remaining bytes and padding\r\n  if (byteRemainder == 1) {\r\n    chunk = bytes[mainLength];\r\n    a = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\r\n    // Set the 4 least significant bits to zero\r\n    b = (chunk & 3) << 4; // 3   = 2^2 - 1\r\n    base64 += encodings[a] + encodings[b] + '==';\r\n  } else if (byteRemainder == 2) {\r\n    chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];\r\n    a = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\r\n    b = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\r\n    // Set the 2 least significant bits to zero\r\n    c = (chunk & 15) << 2; // 15    = 2^4 - 1\r\n    base64 += encodings[a] + encodings[b] + encodings[c] + '=';\r\n  }\r\n  return base64;\r\n};\r\n\r\n/**\r\n * Helper for events handler.\r\n */\r\nCropper.prototype.events = new function() {\r\n  var _triggers = {};\r\n\r\n  this.on = function(event, callback) {\r\n    if (!_triggers[event]) {\r\n      _triggers[event] = [];\r\n    }\r\n    _triggers[event].push(callback);\r\n  };\r\n\r\n  this.triggerHandler = function(event, params) {\r\n    if (_triggers[event]) {\r\n      for (var i in _triggers[event]) {\r\n        _triggers[event][i](params);\r\n      }\r\n    }\r\n  };\r\n};\r\n//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	eval("if (false) {\r\n  require('./imageCropperDirective.test.js')(angular);\r\n}\r\n\r\nmodule.exports = function(angular, Cropper) {\r\n  __webpack_require__(4);\r\n  angular\r\n    .module('imageCropper')\r\n    .directive('imageCropper', function() {\r\n      return {\r\n        restrict: 'E',\r\n        scope: {\r\n          centerOnInit: '@',\r\n          checkCrossOrigin: '@',\r\n          cropCallback: '&',\r\n          api: '&',\r\n          fitOnInit: '@',\r\n          height: '@',\r\n          imageUrl: '@',\r\n          showControls: '@',\r\n          width: '@',\r\n          zoomStep: '@',\r\n          actionLabels: '&'\r\n        },\r\n        bindToController: true,\r\n        controllerAs: 'vm',\r\n        controller: function() {\r\n          var self = this;\r\n\r\n          // Get action labels.\r\n          this.actionLabels = this.actionLabels();\r\n\r\n          // Get callback.\r\n          this.apiCallback = this.api();\r\n          this.cropCallback = this.cropCallback();\r\n\r\n          // Eval for boolean values.\r\n          this.fitOnInit = eval(this.fitOnInit);\r\n          this.centerOnInit = eval(this.centerOnInit);\r\n          this.checkCrossOrigin = eval(this.checkCrossOrigin);\r\n          this.showControls = eval(this.showControls);\r\n\r\n          this.init = function() {\r\n            this.target = this.element;\r\n            this.api = new Cropper(self);\r\n          }\r\n        },\r\n        'link': function(scope, element, attributes, controller)Â {\r\n          controller.element = element[0];\r\n          controller.init();\r\n        }\r\n      };\r\n    });\r\n};\r\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VDcm9wcGVyRGlyZWN0aXZlLmpzP2VlZDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaWYgKE9OX1RFU1QpIHtcclxuICByZXF1aXJlKCcuL2ltYWdlQ3JvcHBlckRpcmVjdGl2ZS50ZXN0LmpzJykoYW5ndWxhcik7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oYW5ndWxhciwgQ3JvcHBlcikge1xyXG4gIHJlcXVpcmUoJy4vYW5ndWxhci1pbWFnZS1jcm9wcGVyLnNjc3MnKTtcclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdpbWFnZUNyb3BwZXInKVxyXG4gICAgLmRpcmVjdGl2ZSgnaW1hZ2VDcm9wcGVyJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgICBzY29wZToge1xyXG4gICAgICAgICAgY2VudGVyT25Jbml0OiAnQCcsXHJcbiAgICAgICAgICBjaGVja0Nyb3NzT3JpZ2luOiAnQCcsXHJcbiAgICAgICAgICBjcm9wQ2FsbGJhY2s6ICcmJyxcclxuICAgICAgICAgIGFwaTogJyYnLFxyXG4gICAgICAgICAgZml0T25Jbml0OiAnQCcsXHJcbiAgICAgICAgICBoZWlnaHQ6ICdAJyxcclxuICAgICAgICAgIGltYWdlVXJsOiAnQCcsXHJcbiAgICAgICAgICBzaG93Q29udHJvbHM6ICdAJyxcclxuICAgICAgICAgIHdpZHRoOiAnQCcsXHJcbiAgICAgICAgICB6b29tU3RlcDogJ0AnLFxyXG4gICAgICAgICAgYWN0aW9uTGFiZWxzOiAnJidcclxuICAgICAgICB9LFxyXG4gICAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWUsXHJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgIGNvbnRyb2xsZXI6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG5cclxuICAgICAgICAgIC8vIEdldCBhY3Rpb24gbGFiZWxzLlxyXG4gICAgICAgICAgdGhpcy5hY3Rpb25MYWJlbHMgPSB0aGlzLmFjdGlvbkxhYmVscygpO1xyXG5cclxuICAgICAgICAgIC8vIEdldCBjYWxsYmFjay5cclxuICAgICAgICAgIHRoaXMuYXBpQ2FsbGJhY2sgPSB0aGlzLmFwaSgpO1xyXG4gICAgICAgICAgdGhpcy5jcm9wQ2FsbGJhY2sgPSB0aGlzLmNyb3BDYWxsYmFjaygpO1xyXG5cclxuICAgICAgICAgIC8vIEV2YWwgZm9yIGJvb2xlYW4gdmFsdWVzLlxyXG4gICAgICAgICAgdGhpcy5maXRPbkluaXQgPSBldmFsKHRoaXMuZml0T25Jbml0KTtcclxuICAgICAgICAgIHRoaXMuY2VudGVyT25Jbml0ID0gZXZhbCh0aGlzLmNlbnRlck9uSW5pdCk7XHJcbiAgICAgICAgICB0aGlzLmNoZWNrQ3Jvc3NPcmlnaW4gPSBldmFsKHRoaXMuY2hlY2tDcm9zc09yaWdpbik7XHJcbiAgICAgICAgICB0aGlzLnNob3dDb250cm9scyA9IGV2YWwodGhpcy5zaG93Q29udHJvbHMpO1xyXG5cclxuICAgICAgICAgIHRoaXMuaW5pdCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICB0aGlzLnRhcmdldCA9IHRoaXMuZWxlbWVudDtcclxuICAgICAgICAgICAgdGhpcy5hcGkgPSBuZXcgQ3JvcHBlcihzZWxmKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgICdsaW5rJzogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHJpYnV0ZXMsIGNvbnRyb2xsZXIpwqB7XHJcbiAgICAgICAgICBjb250cm9sbGVyLmVsZW1lbnQgPSBlbGVtZW50WzBdO1xyXG4gICAgICAgICAgY29udHJvbGxlci5pbml0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG4gICAgfSk7XHJcbn07XHJcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvaW1hZ2VDcm9wcGVyRGlyZWN0aXZlLmpzXG4gKiogbW9kdWxlIGlkID0gM1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(5);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(7)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/index.js!./angular-image-cropper.scss\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/index.js!./angular-image-cropper.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYW5ndWxhci1pbWFnZS1jcm9wcGVyLnNjc3M/NjFkNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUE4RTtBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanMhLi9hbmd1bGFyLWltYWdlLWNyb3BwZXIuc2Nzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanNcIikoY29udGVudCwge30pO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanMhLi9hbmd1bGFyLWltYWdlLWNyb3BwZXIuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzIS4vYW5ndWxhci1pbWFnZS1jcm9wcGVyLnNjc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvYW5ndWxhci1pbWFnZS1jcm9wcGVyLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSA0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("exports = module.exports = __webpack_require__(6)();\n// imports\n\n\n// module\nexports.push([module.id, \"body.imgCropper-dragging, body.imgCropper-dragging * {\\n  cursor: move !important;\\n  cursor: -webkit-grabbing !important;\\n  cursor: -moz-grabbing !important;\\n  cursor: grabbing !important;\\n  cursor: grabbing, move;\\n  /* IE hack */ }\\n\\n.imgCropper-wrapper {\\n  display: block;\\n  position: relative;\\n  overflow: hidden;\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n  cursor: grab, move;\\n  /* IE hack */ }\\n\\n.imgCropper-container {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  text-align: center;\\n  margin: 0 !important;\\n  padding: 0 !important;\\n  border: none !important; }\\n\\n.imgCropper-container > * {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  max-width: none;\\n  max-height: none;\\n  width: 100%;\\n  height: 100%;\\n  margin: 0 !important;\\n  padding: 0 !important;\\n  border: none !important; }\\n\\n.imgCropper-sample {\\n  position: absolute !important;\\n  top: -100000px     !important;\\n  left: -100000px    !important;\\n  width: auto        !important;\\n  height: auto       !important; }\\n\", \"\"]);\n\n// exports\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYW5ndWxhci1pbWFnZS1jcm9wcGVyLnNjc3M/OGZkYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7QUFHQTtBQUNBLGdGQUFnRiw0QkFBNEIsd0NBQXdDLHFDQUFxQyxnQ0FBZ0MsMkJBQTJCLG1CQUFtQix5QkFBeUIsbUJBQW1CLHVCQUF1QixxQkFBcUIsaUJBQWlCLHlCQUF5QixzQkFBc0IsaUJBQWlCLHVCQUF1QixtQkFBbUIsMkJBQTJCLHVCQUF1QixXQUFXLFlBQVksdUJBQXVCLHlCQUF5QiwwQkFBMEIsNEJBQTRCLEVBQUUsK0JBQStCLHVCQUF1QixXQUFXLFlBQVksb0JBQW9CLHFCQUFxQixnQkFBZ0IsaUJBQWlCLHlCQUF5QiwwQkFBMEIsNEJBQTRCLEVBQUUsd0JBQXdCLGtDQUFrQyxrQ0FBa0Msa0NBQWtDLGtDQUFrQyxrQ0FBa0MsRUFBRTs7QUFFdmpDIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKCk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJib2R5LmltZ0Nyb3BwZXItZHJhZ2dpbmcsIGJvZHkuaW1nQ3JvcHBlci1kcmFnZ2luZyAqIHtcXG4gIGN1cnNvcjogbW92ZSAhaW1wb3J0YW50O1xcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWJiaW5nICFpbXBvcnRhbnQ7XFxuICBjdXJzb3I6IC1tb3otZ3JhYmJpbmcgIWltcG9ydGFudDtcXG4gIGN1cnNvcjogZ3JhYmJpbmcgIWltcG9ydGFudDtcXG4gIGN1cnNvcjogZ3JhYmJpbmcsIG1vdmU7XFxuICAvKiBJRSBoYWNrICovIH1cXG5cXG4uaW1nQ3JvcHBlci13cmFwcGVyIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIGN1cnNvcjogbW92ZTtcXG4gIGN1cnNvcjogLXdlYmtpdC1ncmFiO1xcbiAgY3Vyc29yOiAtbW96LWdyYWI7XFxuICBjdXJzb3I6IGdyYWI7XFxuICBjdXJzb3I6IGdyYWIsIG1vdmU7XFxuICAvKiBJRSBoYWNrICovIH1cXG5cXG4uaW1nQ3JvcHBlci1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIG1hcmdpbjogMCAhaW1wb3J0YW50O1xcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xcbiAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7IH1cXG5cXG4uaW1nQ3JvcHBlci1jb250YWluZXIgPiAqIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuICBtYXgtd2lkdGg6IG5vbmU7XFxuICBtYXgtaGVpZ2h0OiBub25lO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBtYXJnaW46IDAgIWltcG9ydGFudDtcXG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcXG4gIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50OyB9XFxuXFxuLmltZ0Nyb3BwZXItc2FtcGxlIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xcbiAgdG9wOiAtMTAwMDAwcHggICAgICFpbXBvcnRhbnQ7XFxuICBsZWZ0OiAtMTAwMDAwcHggICAgIWltcG9ydGFudDtcXG4gIHdpZHRoOiBhdXRvICAgICAgICAhaW1wb3J0YW50O1xcbiAgaGVpZ2h0OiBhdXRvICAgICAgICFpbXBvcnRhbnQ7IH1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyIS4vfi9zYXNzLWxvYWRlciEuL3NyYy9hbmd1bGFyLWltYWdlLWNyb3BwZXIuc2Nzc1xuICoqIG1vZHVsZSBpZCA9IDVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 6 */
/***/ function(module, exports) {

	eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzP2RhMDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0Esd0NBQXdDLGdCQUFnQjtBQUN4RCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxyXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcclxuKi9cclxuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcclxuXHR2YXIgbGlzdCA9IFtdO1xyXG5cclxuXHQvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXHJcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xyXG5cdFx0dmFyIHJlc3VsdCA9IFtdO1xyXG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0dmFyIGl0ZW0gPSB0aGlzW2ldO1xyXG5cdFx0XHRpZihpdGVtWzJdKSB7XHJcblx0XHRcdFx0cmVzdWx0LnB1c2goXCJAbWVkaWEgXCIgKyBpdGVtWzJdICsgXCJ7XCIgKyBpdGVtWzFdICsgXCJ9XCIpO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoKGl0ZW1bMV0pO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gcmVzdWx0LmpvaW4oXCJcIik7XHJcblx0fTtcclxuXHJcblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcclxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XHJcblx0XHRpZih0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIilcclxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xyXG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XHJcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcclxuXHRcdFx0XHRhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XHJcblx0XHR9XHJcblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpdGVtID0gbW9kdWxlc1tpXTtcclxuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxyXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xyXG5cdFx0XHQvLyAgd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxyXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxyXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xyXG5cdFx0XHRcdGlmKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcclxuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xyXG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XHJcblx0XHRcdFx0XHRpdGVtWzJdID0gXCIoXCIgKyBpdGVtWzJdICsgXCIpIGFuZCAoXCIgKyBtZWRpYVF1ZXJ5ICsgXCIpXCI7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH07XHJcblx0cmV0dXJuIGxpc3Q7XHJcbn07XHJcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXG4gKiogbW9kdWxlIGlkID0gNlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(false) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n//@ sourceMappingURL=data:application/json;base64,");

/***/ }
/******/ ])
});
;